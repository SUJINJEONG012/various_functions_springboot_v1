<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.various_functions.mapper.MemberMapper">

	<!-- tb_member 테이블 전체칼럼 -->
	<sql id="memberColumns">
		member_id, 
		login_id, 
		member_pw, 
		member_name, 
		member_mail, 
		gender, 
		birthday,
		member_addr1, 
		member_addr2, 
		member_addr3, 
		delete_yn, 
		created_date,
		modified_date, 
		admin_ck, 
		money
	</sql>

	<!-- 회원정보 저장(회원가입) -->
	<insert id="save" parameterType="com.various_functions.dto.MemberDto"
		useGeneratedKeys="true" keyProperty="memberId">
		insert into tb_member(
			<include refid="memberColumns" />
		)values(
			#{memberId},
			#{loginId},
			#{memberPw},
			#{memberName},
			#{memberMail},
			#{gender},
			#{birthday},
			#{memberAddr1},
			#{memberAddr2},
			#{memberAddr3},
			0,
			now(),
			null,
			0,
			10000
		)	
	</insert>
	

	<!-- 회원 상세 조회 -->
	<select id="findByLoginId" parameterType="String" resultType="com.various_functions.vo.MemberVo" >
	select 
	<include refid="memberColumns"/>
	from tb_member
	where
	delete_yn = 0 and login_id = #{value}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="update" parameterType="com.various_functions.dto.MemberDto">
	update tb_member
	set
	modified_date = now(),
	member_pw = #{memberPw},
	member_name = #{memberName},
	member_mail = #{memberMail},
	member_addr1 = #{memberAddr1},
	member_addr2 = #{memberAddr2},
	member_addr3 = #{memberAddr3}
	where 
	member_id = #{memberId}
	</update>
	
	
	<!-- 회원 정보 삭제 -->
	<delete id="findAll" parameterType="long">
	update tb_member
	set
	delete_yn = 1
	where
	member_id = #{memberId}
	</delete>
	
	<!-- 회원 리스트 조회 -->
	<select id="findAll" resultType="com.various_functions.vo.MemberVo">
	select 
	<include refid="memberColumns"/>
	from tb_member
	where delete_yn= 0 
	order by 
	member_id desc
	</select>
	
	
	<!-- 회원 수 카운팅 (아이디 중복 체크) -->
	
</mapper>