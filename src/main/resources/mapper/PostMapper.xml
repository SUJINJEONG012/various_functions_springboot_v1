<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- anamespace 속성에 Mapper인터페이스 경로를 선언해주면 XML mapper가 연결 -->
<mapper namespace="com.various_functions.mapper.PostMapper">

	<!-- tb_table 전체칼럼 -->
	<sql id="postColumns">
		id, title, content, writer, view_cnt, notice_yn, delete_yn,
		created_date,
		modified_date
	</sql>

	<!-- 게시글 저장 -->
	<insert id="save"
		parameterType="com.various_functions.domain.PostRequest"
		useGeneratedKeys="true" keyProperty="id">
		insert into tb_post(
		<include refid="postColumns" />
		)values(
		#{id}, #{title}, #{content}, #{writer}, 0, #{noticeYn}, 0,
		now(), null
		)
	</insert>

	<!-- 게시글 상세정보 조회 -->
	<select id="findById" parameterType="long"
		resultType="com.various_functions.domain.PostResponse">
		select
		<include refid="postColumns" />
		from tb_post
		where id = #{value}
	</select>


	<!-- 게시글 수정 -->
	<update id="update"
		parameterType="com.various_functions.domain.PostRequest">
		update tb_post
		set
		modified_date = now(),
		title = #{title},
		content = #{content},
		writer = #{writer},
		notice_yn = #{noticeYn}
		where
		id = #{id}
	</update>

	<!-- 게시글 삭제 -->
	<delete id="deletedById" parameterType="long">
		update tb_post
		set
		delete_yn=1
		where id = #{id}
	</delete>

	<!-- 게시글 리스트 조회 -->
	<select id="findAll"
		parameterType="com.various_functions.dto.SearchDto"
		resultType="com.various_functions.domain.PostResponse">
		select
		<include refid="postColumns" />
		from
		tb_post
		where
		delete_yn = 0
		<include refid="search" />
		order by
		id desc
		limit
		#{pagination.limitStart}, #{recordSize}
	</select>

	<!-- 게시글 수 카운팅 -->
	<select id="count"
		parameterType="com.various_functions.dto.SearchDto" resultType="int">
		select
		count(*)
		from tb_post
		where
		delete_yn = 0
		<include refid="search" />
	</select>


	<!-- 게시글 검색 -->
	<sql id="search">
		<if test="keyword != null and keyword != ''">
			<choose>
				<when test="searchType != null and searchType != '' ">
					<choose>
						<!-- 검색유형이 있을 때 -->
						<when test="'title'.equals(searchType)">
							AND title like concat('%', #{keyword}, '%'")
						</when>
						<when test="'content'.equals(searchType)">
							AND content like concat('%', #{keyword},'%')
						</when>
						<when test="'writer'.equals(searchType)">
							AND writer like concat('%',#{keyword},'%')
						</when>
					</choose>
				</when>

				<!-- 전체 검색 일때 -->
				<otherwise>
					AND(
					title like concat('%', #{keyword},'%')
					OR content like concat('%', #{keyword},'%')
					OR writer like concat('%', #{keyword},'%')
					)
				</otherwise>
			</choose>
		</if>
	</sql>

</mapper>