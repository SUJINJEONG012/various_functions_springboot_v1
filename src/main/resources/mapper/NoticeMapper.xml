<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- anamespace 속성에 Mapper인터페이스 경로를 선언해주면 XML mapper가 연결 -->
<mapper namespace="com.various_functions.admin.mapper.NoticeMapper">

	<!-- tb_notice 전체칼럼 -->
	<sql id="noticeColumns">
		notice_id,
		title,
		content,
		writer,
		view_cnt,
		notice_yn,
		delete_yn,
		created_date,
		modified_date
	</sql>

	<!-- 게시글 저장 -->
	<insert id="noticeSave"
		parameterType="com.various_functions.admin.dto.NoticeDto"
		useGeneratedKeys="true" keyProperty="noticeId">
		insert into notice(
		<include refid="noticeColumns" />
		) values(
		#{noticeId},
		#{title},
		#{content},
		#{writer},
		0,
		#{noticeYn},
		0,
		now(),
		null
		)
	</insert>

	<!-- 게시글 상세정보 조회 -->
	<select id="findById" parameterType="Long"
		resultType="com.various_functions.admin.vo.NoticeVo">
		select
		<include refid="noticeColumns" />
		from notice
		where notice_id = #{noticeId}
	</select>

	<!-- 게시글 수정 -->
	<update id="update"
		parameterType="com.various_functions.admin.dto.NoticeDto">
		update tb_notice
		set
		modified_date = now(),
		title =
		#{title},
		content = #{content},
		writer = #{writer},
		notice_yn = #{noticeYn}
		where notice_id = #{noticeId}

	</update>

	<!-- 게시글 삭제 -->
	<delete id="deleteById" parameterType="long">
		update tb_notice
		set
		delete_yn = 1
		where notice_id = #{noticeId}
	</delete>
	
	<!-- 게시글 리스트 조회, 
	검색부분을매퍼에 파라미터로 넣었기 때문에 
	parameterType을 적어줘야 한다.
	
	그리고 case when notice_yn = 1 then 0 else 1 end,
	created_date desc: notice_yn 부분은
	 1일 경우에는 먼저 나오도록 정렬하고, 그 다음에는 created_date 컬럼을 내림차순으로 정렬합니다. 즉, 먼저 공지사항이 있는 글이 나오고, 
	 그 다음에는 작성일자가 최신인 순서대로 정렬
	 -->
	<select id="findAllNotices"
	parameterType="com.various_functions.dto.PagedSearchDto"
	resultType="com.various_functions.admin.vo.NoticeVo">
		select 
		<include refid="noticeColumns" />
		from 
			notice
		where 
			delete_yn = 0 
		order by 
		case when notice_yn = 1 then 0 else 1 end,
		created_date desc
		limit #{offset}, #{recordSize};
	</select>
	
	<!-- 해당 아이디 게시글 조회 => 마이페이지  -->	
	<select id="findNoticeUserById" parameterType="string" resultType="com.various_functions.admin.vo.NoticeVo">
		select 
		<include refid="noticeColumns" />
	 	from notice 
		where
		login_id = #{loginId}
	</select>

	<!-- 최근게시물 5개 -->
	<select id="findRecentNotices" resultType="com.various_functions.admin.vo.NoticeVo">
		select * from notice
		order by created_date desc
		limit 5
	</select>
	
	
	<!-- 게시글 수 카운팅 -->
	
	

</mapper>